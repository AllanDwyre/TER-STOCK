CREATE DATABASE IF NOT EXISTS stock;

USE stock;

# Supression de EMPLACEMENT
DROP TABLE IF EXISTS PRODUITS_ENTREES;
DROP TABLE IF EXISTS PRODUITS_SORTIES;
DROP TABLE IF EXISTS PRODUIT_VENDU;
DROP TABLE IF EXISTS LOT_VENDU;
DROP TABLE IF EXISTS PRODUIT_LIVRE;
DROP TABLE IF EXISTS VENTES_REALISES;

DROP TABLE IF EXISTS INVENTAIRE_PRODUIT;
DROP TABLE IF EXISTS INVENTAIRE_LOT;

DROP TABLE IF EXISTS RECEPTION_COMMANDE;
DROP TABLE IF EXISTS RETOUR_PRODUIT;
DROP TABLE IF EXISTS VENTE;
DROP TABLE IF EXISTS LIVRAISON;
DROP TABLE IF EXISTS RETOUR_FOURNISSEUR;

DROP TABLE IF EXISTS COMMANDE_ENTREE;
DROP TABLE IF EXISTS COMMANDE_SORTIE;

DROP TABLE IF EXISTS LOT_PRODUITS;
DROP TABLE IF EXISTS PRODUIT;

DROP TABLE IF EXISTS FOURNISSEUR;
DROP TABLE IF EXISTS FACTURE;
DROP TABLE IF EXISTS CLIENT;
DROP TABLE IF EXISTS EMPLOYE;

DROP TABLE IF EXISTS EMPLACEMENT;
DROP TABLE IF EXISTS CATEGORIE;
DROP TABLE IF EXISTS ADRESSE;




## Table des catégories des produits
CREATE TABLE IF NOT EXISTS CATEGORIE (
    CATEGORIE_ID NUMERIC(15),
    NOM_CATEGORIE VARCHAR(255),
    CONSTRAINT PK_CAT PRIMARY KEY (CATEGORIE_ID)
);

## Table des emplacements
CREATE TABLE IF NOT EXISTS EMPLACEMENT(
    EMPLACEMENT_ID NUMERIC(15),
    NOM_EMPLACEMENT VARCHAR(255),
    DESC_EMPLACEMENT VARCHAR(255), 
    CONSTRAINT PK_EMPLACEMENT PRIMARY KEY (EMPLACEMENT_ID)
)ENGINE=InnoDB;

## Table des adresses
CREATE TABLE IF NOT EXISTS ADRESSE(
    ADRESSE_ID NUMERIC(15),
    NUM_RUE INT,
    NOM_RUE VARCHAR(255),
    VILLE VARCHAR(255),
    CODE_POSTAL VARCHAR(255),
    CONSTRAINT PK_ADR PRIMARY KEY (ADRESSE_ID)
);

-- Table des employés
CREATE TABLE IF NOT EXISTS EMPLOYE (
    EMPLOYE_ID NUMERIC(15),
    NOM_EMP VARCHAR(255),
    PRENOM_EMP VARCHAR(255),
    POSTE VARCHAR(255),
    -- RELATIONS --
    ADRESSE_ID NUMERIC(15),
    CONSTRAINT PK_EMP PRIMARY KEY (EMPLOYE_ID),
    CONSTRAINT FK_ADR_EMP FOREIGN KEY (ADRESSE_ID) REFERENCES ADRESSE(ADRESSE_ID)
);

-- Table des clients
CREATE TABLE IF NOT EXISTS CLIENT (
    CLIENT_ID NUMERIC(15),
    NOM_CLI VARCHAR(255),
    PRENOM_CLI VARCHAR(255),
    FIDELITE BOOLEAN,
    -- RELATIONS --
    ADRESSE_ID NUMERIC(15),
    CONSTRAINT PK_CLIENT PRIMARY KEY (CLIENT_ID),
    CONSTRAINT FK_ADR_CLI FOREIGN KEY (ADRESSE_ID) REFERENCES ADRESSE(ADRESSE_ID)
    
)ENGINE = InnoDB;

-- Table des factures
CREATE TABLE IF NOT EXISTS FACTURE (
    FACTURE_ID NUMERIC(15),
    MONTANT DECIMAL(10, 2),
    DATE_FACTURE DATE,
    NOM_MAGASIN VARCHAR(255),
    -- RELATIONS --
    CLIENT_ID NUMERIC(15), -- Relation 1,1 -- 0,1 car client peut être anonyme 
    CONSTRAINT PK_FACTURE PRIMARY KEY (FACTURE_ID),
    CONSTRAINT FK_CLI FOREIGN KEY (CLIENT_ID) REFERENCES CLIENT(CLIENT_ID)
);    


-- Table des fournisseurs
CREATE TABLE IF NOT EXISTS FOURNISSEUR (
    FOURNISSEUR_ID NUMERIC(15),
    NOM_FOURNISSEUR VARCHAR(255),
    TELEPHONE VARCHAR(255),
    -- RELATIONS --
    ADRESSE_ID NUMERIC(15),
    CONSTRAINT PK_FOURNISSEUR PRIMARY KEY (FOURNISSEUR_ID),
    CONSTRAINT FK_ADR_FOURN FOREIGN KEY (ADRESSE_ID) REFERENCES ADRESSE(ADRESSE_ID)
   
)ENGINE = InnoDB;


#### ENTITES PRINCIPALES ####

## Table des produits
CREATE TABLE IF NOT EXISTS PRODUIT (
    PRODUIT_ID NUMERIC(15),
    NOM VARCHAR(255),
    DESCR VARCHAR(255),
    PRIX_UNIT NUMERIC(5,2),
    POIDS VARCHAR(255),
    DIMENSIONS VARCHAR(255),
    MAGASIN_ENTREPOT VARCHAR(255),
    CODE_BARRE_PRODUIT NUMERIC(20), -- ASSOCIATION 1,1 -- 1,1 AVEC CODE BARRE
    QR_CODE_PRODUIT NUMERIC(20), -- ASSOCIATION 1,1 -- 1,1 AVEC QR CODE
    CATEGORIE_ID NUMERIC(15),
    EMPLACEMENT_ID NUMERIC(15),
    CONSTRAINT PK_PRODUIT PRIMARY KEY(PRODUIT_ID),
    CONSTRAINT FK_CAT FOREIGN KEY (CATEGORIE_ID) REFERENCES CATEGORIE(CATEGORIE_ID),
    CONSTRAINT FK_EMP FOREIGN KEY (EMPLACEMENT_ID) REFERENCES EMPLACEMENT(EMPLACEMENT_ID)
)ENGINE = InnoDB;

-- Table des lots de produits
CREATE TABLE IF NOT EXISTS LOT_PRODUITS (
    LOT_ID NUMERIC(15),
    QUANTITE NUMERIC(3),
    PRIX_LOT NUMERIC(5,2),
    CB_LOT NUMERIC(15),
    QR_LOT NUMERIC(15),
    CONSTRAINT PK_LOT PRIMARY KEY (LOT_ID),
    CONSTRAINT FK_LOT_PRODUITS FOREIGN KEY (LOT_ID) REFERENCES PRODUIT(PRODUIT_ID)
);

### MODES D'ENTRÉES ###

-- Table des commandes d'entrée
CREATE TABLE IF NOT EXISTS COMMANDE_ENTREE (
    COMMANDE_E_ID NUMERIC(15),
    -- RELATIONS --
    LOT_ID NUMERIC(15),
    CONSTRAINT PK_CE PRIMARY KEY (COMMANDE_E_ID)
);

CREATE TABLE IF NOT EXISTS COMMANDE_SORTIE (
    COMMANDE_S_ID NUMERIC(15),
    -- RELATIONS --
    CONSTRAINT PK_CS PRIMARY KEY (COMMANDE_S_ID)
);

-- 2) FOURNISSEUR entre un produit --
-- Table des réceptions de commandes d'un fournisseur
CREATE TABLE IF NOT EXISTS RECEPTION_COMMANDE (
    RECEP_FOURN_ID NUMERIC(15),
    DATE_RECEPTION DATE,
    QUANTITE_RECUE INT,
    -- RELATIONS --
    EMPLOYE_ID NUMERIC(15),
    FOURNISSEUR_ID NUMERIC(15),
    CONSTRAINT PK_REC_COMM PRIMARY KEY (RECEP_FOURN_ID),
    CONSTRAINT FK_RECEP FOREIGN KEY (RECEP_FOURN_ID) REFERENCES COMMANDE_ENTREE(COMMANDE_E_ID),
    CONSTRAINT FK_ FOREIGN KEY (EMPLOYE_ID) REFERENCES EMPLOYE(EMPLOYE_ID)
    
);

-- Table des ventes
CREATE TABLE IF NOT EXISTS VENTE (
    VENTE_ID NUMERIC(15),
    DATE_VENTE DATE, 
    MONTANT_TOTAL DECIMAL(8,2),
    MODE_PAIEMENT VARCHAR(255),    
    -- RELATIONS --
    EMPLOYE_ID NUMERIC(15),
    FACTURE_ID NUMERIC(15), -- Relation 1,1 -- 0,1 car vente peut ne pas exister dnc pas de facture. 
    CONSTRAINT PK_VENTE PRIMARY KEY (VENTE_ID),
    CONSTRAINT FK_VENTE_CS FOREIGN KEY (VENTE_ID) REFERENCES COMMANDE_SORTIE(COMMANDE_S_ID),
    CONSTRAINT FK_EMPV FOREIGN KEY (EMPLOYE_ID) REFERENCES EMPLOYE(EMPLOYE_ID),
    CONSTRAINT FK_FAC FOREIGN KEY (FACTURE_ID) REFERENCES FACTURE(FACTURE_ID)
    
);

-- CLIENT retourne un PRODUIT --
-- Table des retours clients 
CREATE TABLE IF NOT EXISTS RETOUR_PRODUIT (
    RETOUR_ID NUMERIC(15) ,
    DATE_RETOUR DATE,
    RAISON_RETOUR VARCHAR(255),
    QUANTITE_RETOURNEE NUMERIC(3),
    -- RELATIONS --
    PRODUIT_ID NUMERIC(15),
    #CLIENT_ID NUMERIC(15),
    VENTE_ID NUMERIC(15),
    CONSTRAINT PK_RETP PRIMARY KEY (RETOUR_ID),
    CONSTRAINT FK_RETP FOREIGN KEY (RETOUR_ID) REFERENCES COMMANDE_ENTREE(COMMANDE_E_ID),
    CONSTRAINT FK_PRODR FOREIGN KEY (PRODUIT_ID) REFERENCES PRODUIT(PRODUIT_ID),
    #FOREIGN KEY (CLIENT_ID) REFERENCES CLIENT(CLIENT_ID),
    CONSTRAINT FK_VENTRP FOREIGN KEY (VENTE_ID) REFERENCES VENTE(VENTE_ID)
);

## LIVRAISON d'un PRODUIT (propre au mode Entrepot) -- 
-- Table des livraisons
CREATE TABLE IF NOT EXISTS LIVRAISON (
    LIVRAISON_ID NUMERIC(15),
    DATE_LIVRAISON DATE,
    -- RELATIONS --
    EMPLOYE_ID NUMERIC(15),
    CONSTRAINT PK_LIV PRIMARY KEY (LIVRAISON_ID),
    CONSTRAINT FK_LIV_CS FOREIGN KEY (LIVRAISON_ID) REFERENCES COMMANDE_SORTIE(COMMANDE_S_ID),
    CONSTRAINT FK_EMPL FOREIGN KEY (EMPLOYE_ID) REFERENCES EMPLOYE(EMPLOYE_ID)
);

## Retour d'un PRODUIT vers le FOURNISSEUR --
-- Table des retour vers le fournisseur
CREATE TABLE IF NOT EXISTS RETOUR_FOURNISSEUR(
    RETOUR_FOURNISSEUR_ID NUMERIC(15),
    DATE_RETOUR_F DATE,
    -- RELATIONS --
    CONSTRAINT PK_RET_F PRIMARY KEY (RETOUR_FOURNISSEUR_ID),
    CONSTRAINT FK_RET_CS FOREIGN KEY (RETOUR_FOURNISSEUR_ID) REFERENCES COMMANDE_SORTIE(COMMANDE_S_ID)

);

-- Table de l'INVENTAIRE réalisé par un EMPLOYE
-- Relation entre EMPLOYE et PRODUIT
CREATE TABLE IF NOT EXISTS INVENTAIRE_PRODUIT(
	INVENTAIRE_ID NUMERIC(15),
    EMPLOYE_ID NUMERIC(15),
    PRODUIT_ID NUMERIC(15),
    QUANTITE_ENTREE_PAR_PROD INT,
    QUANTITE_SORTIE_PAR_PROD INT,
    DATE_INV TIMESTAMP,
    CONSTRAINT PK_INV PRIMARY KEY (INVENTAIRE_ID),
    CONSTRAINT FK_EMP_INV FOREIGN KEY (EMPLOYE_ID) REFERENCES EMPLOYE(EMPLOYE_ID),
    CONSTRAINT FK_PROD_INV FOREIGN KEY (PRODUIT_ID) REFERENCES PRODUIT(PRODUIT_ID)
    
)ENGINE = INNODB;

CREATE TABLE IF NOT EXISTS INVENTAIRE_LOT(
	INVENTAIRE_LOT_ID NUMERIC(15),
    EMPLOYE_ID NUMERIC(15),
    LOT_ID NUMERIC(15),
    QUANTITE_ENTREE_PAR_LOT INT,
    QUANTITE_SORTIE_PAR_LOT INT,
    DATE_INV_LOT TIMESTAMP,
    CONSTRAINT PK_INV_LOT PRIMARY KEY (INVENTAIRE_LOT_ID),
    CONSTRAINT FK_EMP_INV_LOT FOREIGN KEY (EMPLOYE_ID) REFERENCES EMPLOYE(EMPLOYE_ID),
    CONSTRAINT FK_LOT_INV FOREIGN KEY (LOT_ID) REFERENCES LOT_PRODUITS(LOT_ID)
    
)ENGINE = INNODB;

####### ENTITES EN RELATION AVEC LES ENTITES PRINCIPALES ######

### RELATIONS MAILLÉES ###

-- Tables des produits rentrés dans la BDD
-- Relation entre COMMANDE_ENTREE et PRODUIT
CREATE TABLE IF NOT EXISTS PRODUITS_ENTREES(
    PRODUIT_ID NUMERIC(15),
    COMMANDE_E_ID NUMERIC(15),
    CONSTRAINT PK_PE PRIMARY KEY (PRODUIT_ID, COMMANDE_E_ID),
    CONSTRAINT FK_PRE FOREIGN KEY (PRODUIT_ID) REFERENCES PRODUIT(PRODUIT_ID),
    CONSTRAINT FK_PR_CE FOREIGN KEY (COMMANDE_E_ID) REFERENCES COMMANDE_ENTREE(COMMANDE_E_ID)
);

-- Tables des produits sortis dans la BDD
-- Relation entre COMMANDE_SORTIE et PRODUIT
CREATE TABLE IF NOT EXISTS PRODUITS_SORTIES(
    PRODUIT_ID NUMERIC(15),
    COMMANDE_S_ID NUMERIC(15),
    CONSTRAINT PK_PS PRIMARY KEY (PRODUIT_ID, COMMANDE_S_ID),
    CONSTRAINT FK_PRS FOREIGN KEY (PRODUIT_ID) REFERENCES PRODUIT(PRODUIT_ID),
    CONSTRAINT FK_PR_CS FOREIGN KEY (COMMANDE_S_ID) REFERENCES COMMANDE_SORTIE(COMMANDE_S_ID)
);

-- Table des produits vendus
-- Relation entre PRODUIT et VENTE
CREATE TABLE IF NOT EXISTS PRODUIT_VENDU (
    PRODUIT_ID NUMERIC(15),
    VENTE_ID NUMERIC(15),
    QUANTITE NUMERIC(10),
    PRIX_UNIT VARCHAR(255),
    CONSTRAINT PK_PV PRIMARY KEY (PRODUIT_ID, VENTE_ID),
    CONSTRAINT FK_PRV FOREIGN KEY (PRODUIT_ID) REFERENCES PRODUIT(PRODUIT_ID),
    CONSTRAINT FK_VENPR FOREIGN KEY (VENTE_ID) REFERENCES VENTE(VENTE_ID)
);

-- Relation entre LOT et VENTE
CREATE TABLE IF NOT EXISTS LOT_VENDU (
    LOT_ID NUMERIC(15),
    VENTE_ID NUMERIC(15),
    QTE_LOT NUMERIC(10),
    PRIX_LOT VARCHAR(255),
    CONSTRAINT PK_PV PRIMARY KEY (LOT_ID, VENTE_ID),
    CONSTRAINT FK_LOT FOREIGN KEY (LOT_ID) REFERENCES LOT_PRODUITS(LOT_ID),
    CONSTRAINT FK_VENT_LOT FOREIGN KEY (VENTE_ID) REFERENCES VENTE(VENTE_ID)
);

-- Relation entre PRODUIT et LIVRAISON
CREATE TABLE IF NOT EXISTS PRODUIT_LIVRE (
    PRODUIT_ID NUMERIC(15),
    LIVRAISON_ID NUMERIC(15),
    CONSTRAINT PK_PL PRIMARY KEY (PRODUIT_ID, LIVRAISON_ID),
    CONSTRAINT FK_PRL FOREIGN KEY (PRODUIT_ID) REFERENCES PRODUIT(PRODUIT_ID),
    CONSTRAINT FK_LIVPR FOREIGN KEY (LIVRAISON_ID) REFERENCES LIVRAISON(LIVRAISON_ID)
);

-- Relation entre EMPLOYE et VENTE --
CREATE TABLE IF NOT EXISTS VENTES_REALISES(
    EMPLOYE_ID NUMERIC(15),
    VENTE_ID NUMERIC(15),
    FACTURE_DEMANDE BOOLEAN,
    CONSTRAINT PK_PV PRIMARY KEY (EMPLOYE_ID, VENTE_ID),
    CONSTRAINT FK_EMPLOYE_VENTE FOREIGN KEY (EMPLOYE_ID) REFERENCES EMPLOYE(EMPLOYE_ID),
    CONSTRAINT FK_VENTE_EMP FOREIGN KEY (VENTE_ID) REFERENCES VENTE(VENTE_ID)
) ENGINE = InnoDB;